// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package storage;

service StorageContentManagerServer {
  rpc GetAbsolutePath(AbsolutePathRequest) returns (AbsolutePathResponse) {}

  rpc OpenFile(OpenFileRequest) returns (OpenFileResponse) {}

  rpc ReadFile(ReadFileRequest) returns (ReadFileResponse) {}

  rpc WriteFile(WriteFileRequest) returns (WriteFileResponse) {}

  rpc CloseFile(CloseFileRequest) returns (CloseFileResponse) {}
}

message AbsolutePathRequest {
  bytes drive_key = 1;
  string relative_path = 2;
}

message AbsolutePathResponse {
  string absolute_path = 1;
}

enum OpenFileMode {
  READ = 0;
  WRITE = 1;
}

message OpenFileRequest {
  bytes drive_key = 1;
  string path = 2;
  OpenFileMode mode = 3;
}

message OpenFileResponse {
  bool success = 1;
  uint64 id = 2;
}

message ReadFileRequest {
  bytes drive_key = 1;
  uint64 file_id = 2;
}

message ReadFileResponse {
  optional bytes buffer = 1;
}

message WriteFileRequest {
  bytes drive_key = 1;
  uint64 file_id = 2;
  bytes buffer = 3;
}

message WriteFileResponse {
  bool success = 1;
}

message FlushRequest {
  bytes drive_key = 1;
  uint64 file_id = 2;
}

message FlushResponse {
  bool success = 1;
}

message CloseFileRequest {
  bytes drive_key = 1;
  uint64 file_id = 2;
}

message CloseFileResponse {
  bool success = 1;
}