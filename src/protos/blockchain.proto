syntax = "proto3";

package blockchain;

service Blockchain {
  rpc GetCaller (CallOrientedParams) returns (Buffer) {}
  rpc GetServicePayment (CallOrientedParams) returns (PaymentAmount) {}
  rpc GetBlockHeight (CallOrientedParams) returns (Height) {}
  rpc GetBlockHash (CallOrientedParams) returns (Hash) {}
  rpc GetBlockTime (CallOrientedParams) returns (Timestamp) {}
  rpc GetBlockGenerationTime (CallOrientedParams) returns (Timestamp) {}
  rpc GetTransactionHash (CallOrientedParams) returns (Hash) {}
  rpc GetCallerPublicKey (CallOrientedParams) returns (PublicKey) {}
  rpc AddTransaction (TransactionMsg) returns (Hash) {}
  rpc GetTransactionBlockHeight (HashParam) returns (Height) {}
  rpc GetResponseTransactionHash (HashParam) returns (Hash) {}
  rpc GetTransactionContent (HashParam) returns (Buffer) {}
}

message HashParam {
  bytes contractKey = 1;
  bytes callId = 2;
  bytes hash = 3;
  bytes session_id = 5;
}

message Buffer {
  bytes buffer = 1;
}

message Height {
  uint64 height = 1;
}

message Hash {
  bytes hash = 1;
}

message Timestamp {
  uint64 timestamp = 1;
}

message PublicKey {
  bytes publicKey = 1;
}

message PaymentAmount {
  uint64 paymentAmount = 1;
}

message CallOrientedParams {
  bytes contractKey = 1;
  bytes callId = 2;
  bytes session_id = 5;
}

message TransactionMsg {
  bytes contractKey = 1;
  bytes callId = 2;
  string name = 3;
  string parameters = 4;
  bytes session_id = 5;
}